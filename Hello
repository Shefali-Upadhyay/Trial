useEffect(() => {
    console.log("hello", fields)
    let updatedFields: any = fields;
    updatedFields?.fields?.forEach((fieldSet: any) => {
      if(fieldSet.field_set_name === "Additional Contact Details"){
        fieldSet.fields.forEach((field:any) => {
          console.log(field.logical_field_name);
          if(field.logical_field_name === "mobile_1" && stageSelector[0].stageId === "bd-3" 
          && authenticateType() === "myinfo" && !additionalFields.includes("mobile_1")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["mobile_1"]})
            );
            // res.fields.splice(5,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(5,0,stageComponents[0]);
            additionalFields.push("mobile_1");
          }
          else if(field.logical_field_name === "mobile_2" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo"  && !additionalFields.includes("mobile_2")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["mobile_2"]})
            );
            // res.fields.splice(7,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(7,0,stageComponents[0]);
            additionalFields.push("mobile_2");
          }else if(field.logical_field_name === "overseas_mobile1_contact_no" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo" && !additionalFields.includes("overseas_mobile1_contact_no")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["overseas_mobile1_contact_no"]})
            );
            // res.fields.splice(9,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(9,0,stageComponents[0]);
            additionalFields.push("overseas_mobile1_contact_no");
          }else if(field.logical_field_name === "overseas_mobile2_contact_no" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo" && !additionalFields.includes("overseas_mobile2_contact_no")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["overseas_mobile2_contact_no"]})
            );
            // res.fields.splice(11,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(11,0,stageComponents[0]);
            additionalFields.push("overseas_mobile2_contact_no");
          }else if(field.logical_field_name === "ofc1_number" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo"  && !additionalFields.includes("ofc1_number")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["ofc1_number"]})
            );
            // res.fields.splice(13,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(13,0,stageComponents[0]);
            additionalFields.push("ofc1_number");
          }
          else if(field.logical_field_name === "ofc2_number" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo" && !additionalFields.includes("ofc2_number")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["ofc2_number"]})
            );
            // res.fields.splice(15,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(15,0,stageComponents[0]);
            additionalFields.push("ofc2_number");
          }
          else if(field.logical_field_name === "office_phone1_number" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo" && !additionalFields.includes("office_phone1_number")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["office_phone1_number"]})
            );
            // res.fields.splice(17,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(17,0,stageComponents[0]);
            additionalFields.push("office_phone1_number");
          }else if(field.logical_field_name === "office_phone2_number" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo" && !additionalFields.includes("office_phone2_number")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["office_phone2_number"]})
            );
            // res.fields.splice(19,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(19,0,stageComponents[0]);
            additionalFields.push("office_phone2_number");
          }else if(field.logical_field_name === "ohph1_number" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo"  && !additionalFields.includes("ohph1_number")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["ohph1_number"]})
            );
            // res.fields.splice(21,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(21,0,stageComponents[0]);
            additionalFields.push("ohph1_number");
          }else if(field.logical_field_name === "ohph2_number" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo"   && !additionalFields.includes("ohph2_number")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["ohph2_number"]})
            );
            // res.fields.splice(23,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(23,0,stageComponents[0]);
            additionalFields.push("ohph2_number");
          }
          else if(field.logical_field_name === "home_phone2_number" && stageSelector[0].stageId === "bd-3"
          && authenticateType() === "myinfo" && !additionalFields.includes("home_phone2_number")){
            const stageComponents = dispatch(
              getFields(stageSelector, {fields:["home_phone2_number"]})
            );
            // res.fields.splice(25,0,stageComponents[0]);
            // setFields(fields);
            updatedFields.fields[2].fields.splice(25,0,stageComponents[0]);
            additionalFields.push("home_phone2_number");
            console.log("After:", updatedFields);
          }else{
           console.log(updatedFields)
          }
        });
      }
    });
  },[fields]);





import { AppDispatch } from "../../../services/common-service";
import {
  KeyWithAnyModel,
  StageDetails,
} from "../../../utils/model/common-model";
import { fieldErrorAction } from "../../../utils/store/field-error-slice";
import { stagesAction } from "../../../utils/store/stages-slice";
import { getUrl } from "../../../utils/common/change.utils";

export const getFields = (
  getStages: Array<StageDetails>,
  phoneSelector: any,
): any => {
  return (dispatch: AppDispatch) => {
    const stageId = getStages[0].stageId;
    const stageIndex =  getStages[0].stageInfo.fieldmetadata.data.stages.findIndex(
      (id: any) => id.stageId.toLowerCase() === stageId.toLowerCase()
    );
    let fields: Array<KeyWithAnyModel> | undefined = getStages[0].stageInfo.fieldmetadata.data.stages[stageIndex === -1?0:stageIndex].fields;
    let newFileds: Array<KeyWithAnyModel> = [];
    let newFieldsArray: Array<string> = [];
    const journeyType = getUrl.getJourneyType();

    let getClonedField = (logical_field_name: string) => {
      if (fields) {
        let field = fields.find(
          fieldData => fieldData.logical_field_name === logical_field_name
        );
        if (field && field.logical_field_name) {
          return { ...field };
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
    phoneSelector.fields.forEach((field: string) => {
      let phone = getClonedField(phoneSelector.fields[0]);
      if (field && phone) {
        if(phoneSelector.fields[0] === "mobile_number_rwb"){
          phone.logical_field_name = "mobile_number";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }
        else if(phoneSelector.fields[0] === "mobile_1"){
          debugger;
          phone.logical_field_name = "mobile_1_add";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }
        else if(phoneSelector.fields[0] === "mobile_2"){
          phone.logical_field_name = "mobile_2_add";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "overseas_mobile1_contact_no"){
          phone.logical_field_name = "overseas_mobile1";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "overseas_mobile2_contact_no"){
          phone.logical_field_name = "overseas_mobile2";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "ofc1_number"){
          phone.logical_field_name = "ofc1";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "ofc2_number"){
          phone.logical_field_name = "ofc2";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "home_phone2_number"){
          phone.logical_field_name = "home_phone2";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "office_phone1_number"){
          phone.logical_field_name = "office_phone1";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "office_phone2_number"){
          phone.logical_field_name = "office_phone2";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "ohph1_number"){
          phone.logical_field_name = "ohph1";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }else if(phoneSelector.fields[0] === "ohph2_number"){
          phone.logical_field_name = "ohph2";
          phone.component_type = "Phone";
          phone.rwb_label_name = "";
        }
        if (journeyType) {
          phone.hide_remove_btn = true;
        }
        newFileds.push(phone);
        newFieldsArray.push(phone.logical_field_name);
      }
    });

    if (newFieldsArray.length > 0) {
      dispatch(fieldErrorAction.getMandatoryFields(newFieldsArray));
      dispatch(
        stagesAction.removeAddToggleField({
          removeFields: [],
          newFields: newFieldsArray,
          value: ""
        })
      );
    }

    return newFileds;
  };
};
